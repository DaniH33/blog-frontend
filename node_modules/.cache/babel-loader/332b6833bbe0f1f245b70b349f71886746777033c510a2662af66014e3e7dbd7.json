{"ast":null,"code":"import { noop } from \"./noop\";\nvar createDeferredPromise = function createDeferredPromise() {\n  var resolve = noop;\n  var reject = noop;\n  var promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    promise: promise,\n    resolve: resolve,\n    reject: reject\n  };\n};\nexport { createDeferredPromise };","map":{"version":3,"names":["noop","createDeferredPromise","resolve","reject","promise","Promise","res","rej"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@clerk/shared/src/utils/createDeferredPromise.ts"],"sourcesContent":["import { noop } from './noop';\n\ntype Callback = (val?: any) => void;\n\n/**\n * Create a promise that can be resolved or rejected from\n * outside the Promise constructor callback\n */\nexport const createDeferredPromise = () => {\n  let resolve: Callback = noop;\n  let reject: Callback = noop;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, resolve, reject };\n};\n"],"mappings":"AAAA,SAASA,IAAA,QAAY;AAQd,IAAMC,qBAAA,GAAwB,SAAxBA,sBAAA,EAA8B;EACzC,IAAIC,OAAA,GAAoBF,IAAA;EACxB,IAAIG,MAAA,GAAmBH,IAAA;EACvB,IAAMI,OAAA,GAAU,IAAIC,OAAA,CAAQ,UAACC,GAAA,EAAKC,GAAA,EAAQ;IACxCL,OAAA,GAAUI,GAAA;IACVH,MAAA,GAASI,GAAA;EACX,CAAC;EACD,OAAO;IAAEH,OAAA,EAAAA,OAAA;IAASF,OAAA,EAAAA,OAAA;IAASC,MAAA,EAAAA;EAAO;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}