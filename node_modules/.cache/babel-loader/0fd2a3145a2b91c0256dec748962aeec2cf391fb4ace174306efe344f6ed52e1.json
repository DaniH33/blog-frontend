{"ast":null,"code":"import _objectSpread from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"../chunk-UKSPFOP7.js\";\nimport React from \"react\";\nimport { useIsomorphicClerkContext } from \"../contexts/IsomorphicClerkContext\";\nimport { LoadedGuarantee } from \"../contexts/StructureContext\";\nimport { hocChildrenNotAFunctionError } from \"../errors\";\nvar withClerk = function withClerk(Component, displayName) {\n  displayName = displayName || Component.displayName || Component.name || \"Component\";\n  Component.displayName = displayName;\n  var HOC = function HOC(props) {\n    var clerk = useIsomorphicClerkContext();\n    if (!clerk.loaded) {\n      return null;\n    }\n    return /* @__PURE__ */React.createElement(LoadedGuarantee, null, /* @__PURE__ */React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      clerk: clerk\n    })));\n  };\n  HOC.displayName = \"withClerk(\".concat(displayName, \")\");\n  return HOC;\n};\nvar WithClerk = function WithClerk(_ref) {\n  var children = _ref.children;\n  var clerk = useIsomorphicClerkContext();\n  if (typeof children !== \"function\") {\n    throw new Error(hocChildrenNotAFunctionError);\n  }\n  if (!clerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(LoadedGuarantee, null, children(clerk));\n};\nexport { WithClerk, withClerk };","map":{"version":3,"names":["React","useIsomorphicClerkContext","LoadedGuarantee","hocChildrenNotAFunctionError","withClerk","Component","displayName","name","HOC","props","clerk","loaded","createElement","_objectSpread","concat","WithClerk","_ref","children","Error"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@clerk/clerk-react/src/components/withClerk.tsx"],"sourcesContent":["import type { LoadedClerk } from '@clerk/types';\nimport React from 'react';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { LoadedGuarantee } from '../contexts/StructureContext';\nimport { hocChildrenNotAFunctionError } from '../errors';\n\nexport const withClerk = <P extends { clerk: LoadedClerk }>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n) => {\n  displayName = displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  const HOC = (props: Omit<P, 'clerk'>) => {\n    const clerk = useIsomorphicClerkContext();\n\n    if (!clerk.loaded) {\n      return null;\n    }\n\n    return (\n      <LoadedGuarantee>\n        <Component\n          {...(props as P)}\n          clerk={clerk}\n        />\n      </LoadedGuarantee>\n    );\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\nexport const WithClerk: React.FC<{\n  children: (clerk: LoadedClerk) => React.ReactNode;\n}> = ({ children }) => {\n  const clerk = useIsomorphicClerkContext();\n\n  if (typeof children !== 'function') {\n    throw new Error(hocChildrenNotAFunctionError);\n  }\n\n  if (!clerk.loaded) {\n    return null;\n  }\n\n  return <LoadedGuarantee>{children(clerk as unknown as LoadedClerk)}</LoadedGuarantee>;\n};\n"],"mappings":";;AACA,OAAOA,KAAA,MAAW;AAElB,SAASC,yBAAA,QAAiC;AAC1C,SAASC,eAAA,QAAuB;AAChC,SAASC,4BAAA,QAAoC;AAEtC,IAAMC,SAAA,GAAY,SAAZA,UACXC,SAAA,EACAC,WAAA,EACG;EACHA,WAAA,GAAcA,WAAA,IAAeD,SAAA,CAAUC,WAAA,IAAeD,SAAA,CAAUE,IAAA,IAAQ;EACxEF,SAAA,CAAUC,WAAA,GAAcA,WAAA;EACxB,IAAME,GAAA,GAAM,SAANA,IAAOC,KAAA,EAA4B;IACvC,IAAMC,KAAA,GAAQT,yBAAA,CAA0B;IAExC,IAAI,CAACS,KAAA,CAAMC,MAAA,EAAQ;MACjB,OAAO;IACT;IAEA,OACE,eAAAX,KAAA,CAAAY,aAAA,CAACV,eAAA,QACC,eAAAF,KAAA,CAAAY,aAAA,CAACP,SAAA,EAAAQ,aAAA,CAAAA,aAAA,KACMJ,KAAA;MACLC,KAAA,EAAAA;IAAA,EACF,CACF;EAEJ;EACAF,GAAA,CAAIF,WAAA,gBAAAQ,MAAA,CAA2BR,WAAA;EAC/B,OAAOE,GAAA;AACT;AAEO,IAAMO,SAAA,GAER,SAFQA,UAAAC,IAAA,EAEU;EAAA,IAAfC,QAAA,GAAAD,IAAA,CAAAC,QAAA;EACN,IAAMP,KAAA,GAAQT,yBAAA,CAA0B;EAExC,IAAI,OAAOgB,QAAA,KAAa,YAAY;IAClC,MAAM,IAAIC,KAAA,CAAMf,4BAA4B;EAC9C;EAEA,IAAI,CAACO,KAAA,CAAMC,MAAA,EAAQ;IACjB,OAAO;EACT;EAEA,OAAO,eAAAX,KAAA,CAAAY,aAAA,CAACV,eAAA,QAAiBe,QAAA,CAASP,KAA+B,CAAE;AACrE"},"metadata":{},"sourceType":"module","externalDependencies":[]}