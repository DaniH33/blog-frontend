{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar DefaultMessages = Object.freeze({\n  InvalidFrontendApiErrorMessage: \"The frontendApi passed to Clerk is invalid. You can get your Frontend API key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})\",\n  InvalidProxyUrlErrorMessage: \"The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})\",\n  InvalidPublishableKeyErrorMessage: \"The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})\",\n  MissingPublishableKeyErrorMessage: \"Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.\"\n});\nfunction buildErrorThrower(_ref) {\n  var packageName = _ref.packageName,\n    customMessages = _ref.customMessages;\n  var pkg = packageName;\n  var messages = _objectSpread(_objectSpread({}, DefaultMessages), customMessages);\n  function buildMessage(rawMessage, replacements) {\n    if (!replacements) {\n      return \"\".concat(pkg, \": \").concat(rawMessage);\n    }\n    var msg = rawMessage;\n    var matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n    var _iterator = _createForOfIteratorHelper(matches),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var match = _step.value;\n        var replacement = (replacements[match[1]] || \"\").toString();\n        msg = msg.replace(\"{{\".concat(match[1], \"}}\"), replacement);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return \"\".concat(pkg, \": \").concat(msg);\n  }\n  return {\n    setPackageName: function setPackageName(_ref2) {\n      var packageName2 = _ref2.packageName;\n      if (typeof packageName2 === \"string\") {\n        pkg = packageName2;\n      }\n      return this;\n    },\n    setMessages: function setMessages(_ref3) {\n      var customMessages2 = _ref3.customMessages;\n      Object.assign(messages, customMessages2 || {});\n      return this;\n    },\n    throwInvalidPublishableKeyError: function throwInvalidPublishableKeyError(params) {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n    throwInvalidFrontendApiError: function throwInvalidFrontendApiError(params) {\n      throw new Error(buildMessage(messages.InvalidFrontendApiErrorMessage, params));\n    },\n    throwInvalidProxyUrl: function throwInvalidProxyUrl(params) {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n    throwMissingPublishableKeyError: function throwMissingPublishableKeyError() {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    }\n  };\n}\nexport { buildErrorThrower };","map":{"version":3,"names":["DefaultMessages","Object","freeze","InvalidFrontendApiErrorMessage","InvalidProxyUrlErrorMessage","InvalidPublishableKeyErrorMessage","MissingPublishableKeyErrorMessage","buildErrorThrower","_ref","packageName","customMessages","pkg","messages","_objectSpread","buildMessage","rawMessage","replacements","concat","msg","matches","matchAll","_iterator","_createForOfIteratorHelper","_step","s","n","done","match","value","replacement","toString","replace","err","e","f","setPackageName","_ref2","packageName2","setMessages","_ref3","customMessages2","assign","throwInvalidPublishableKeyError","params","Error","throwInvalidFrontendApiError","throwInvalidProxyUrl","throwMissingPublishableKeyError"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@clerk/shared/src/errors/thrower.ts"],"sourcesContent":["const DefaultMessages = Object.freeze({\n  InvalidFrontendApiErrorMessage: `The frontendApi passed to Clerk is invalid. You can get your Frontend API key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n  InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n});\n\ntype MessageKeys = keyof typeof DefaultMessages;\n\ntype Messages = Record<MessageKeys, string>;\n\ntype CustomMessages = Partial<Messages>;\n\nexport type ErrorThrowerOptions = {\n  packageName: string;\n  customMessages?: CustomMessages;\n};\n\nexport interface ErrorThrower {\n  setPackageName(options: ErrorThrowerOptions): ErrorThrower;\n  setMessages(options: ErrorThrowerOptions): ErrorThrower;\n  throwInvalidPublishableKeyError(params: { key?: string }): never;\n  throwInvalidFrontendApiError(params: { key?: string }): never;\n  throwInvalidProxyUrl(params: { url?: string }): never;\n  throwMissingPublishableKeyError(): never;\n}\n\nexport function buildErrorThrower({ packageName, customMessages }: ErrorThrowerOptions): ErrorThrower {\n  let pkg = packageName;\n\n  const messages = {\n    ...DefaultMessages,\n    ...customMessages,\n  };\n\n  function buildMessage(rawMessage: string, replacements?: Record<string, string | number>) {\n    if (!replacements) {\n      return `${pkg}: ${rawMessage}`;\n    }\n\n    let msg = rawMessage;\n    const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n\n    for (const match of matches) {\n      const replacement = (replacements[match[1]] || '').toString();\n      msg = msg.replace(`{{${match[1]}}}`, replacement);\n    }\n\n    return `${pkg}: ${msg}`;\n  }\n\n  return {\n    setPackageName({ packageName }: ErrorThrowerOptions): ErrorThrower {\n      if (typeof packageName === 'string') {\n        pkg = packageName;\n      }\n      return this;\n    },\n\n    setMessages({ customMessages }: ErrorThrowerOptions): ErrorThrower {\n      Object.assign(messages, customMessages || {});\n      return this;\n    },\n\n    throwInvalidPublishableKeyError(params: { key?: string }): never {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n\n    throwInvalidFrontendApiError(params: { key?: string }): never {\n      throw new Error(buildMessage(messages.InvalidFrontendApiErrorMessage, params));\n    },\n\n    throwInvalidProxyUrl(params: { url?: string }): never {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n\n    throwMissingPublishableKeyError(): never {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    },\n  };\n}\n"],"mappings":";;AAAA,IAAMA,eAAA,GAAkBC,MAAA,CAAOC,MAAA,CAAO;EACpCC,8BAAA,yJAAgC;EAChCC,2BAAA,oJAA6B;EAC7BC,iCAAA,2JAAmC;EACnCC,iCAAA;AACF,CAAC;AAsBM,SAASC,kBAAAC,IAAA,EAAsF;EAAA,IAAlEC,WAAA,GAAAD,IAAA,CAAAC,WAAA;IAAaC,cAAA,GAAAF,IAAA,CAAAE,cAAA;EAC/C,IAAIC,GAAA,GAAMF,WAAA;EAEV,IAAMG,QAAA,GAAAC,aAAA,CAAAA,aAAA,KACDb,eAAA,GACAU,cAAA,CACL;EAEA,SAASI,aAAaC,UAAA,EAAoBC,YAAA,EAAgD;IACxF,IAAI,CAACA,YAAA,EAAc;MACjB,UAAAC,MAAA,CAAUN,GAAA,QAAAM,MAAA,CAAQF,UAAA;IACpB;IAEA,IAAIG,GAAA,GAAMH,UAAA;IACV,IAAMI,OAAA,GAAUJ,UAAA,CAAWK,QAAA,CAAS,uBAAuB;IAAA,IAAAC,SAAA,GAAAC,0BAAA,CAEvCH,OAAA;MAAAI,KAAA;IAAA;MAApB,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA6B;QAAA,IAAlBC,KAAA,GAAAJ,KAAA,CAAAK,KAAA;QACT,IAAMC,WAAA,IAAeb,YAAA,CAAaW,KAAA,CAAM,CAAC,CAAC,KAAK,IAAIG,QAAA,CAAS;QAC5DZ,GAAA,GAAMA,GAAA,CAAIa,OAAA,MAAAd,MAAA,CAAaU,KAAA,CAAM,CAAC,UAAOE,WAAW;MAClD;IAAA,SAAAG,GAAA;MAAAX,SAAA,CAAAY,CAAA,CAAAD,GAAA;IAAA;MAAAX,SAAA,CAAAa,CAAA;IAAA;IAEA,UAAAjB,MAAA,CAAUN,GAAA,QAAAM,MAAA,CAAQC,GAAA;EACpB;EAEA,OAAO;IACLiB,cAAA,WAAAA,eAAAC,KAAA,EAAmE;MAAA,IAAlDC,YAAA,GAAAD,KAAA,CAAA3B,WAAA;MACf,IAAI,OAAO4B,YAAA,KAAgB,UAAU;QACnC1B,GAAA,GAAM0B,YAAA;MACR;MACA,OAAO;IACT;IAEAC,WAAA,WAAAA,YAAAC,KAAA,EAAmE;MAAA,IAArDC,eAAA,GAAAD,KAAA,CAAA7B,cAAA;MACZT,MAAA,CAAOwC,MAAA,CAAO7B,QAAA,EAAU4B,eAAA,IAAkB,CAAC,CAAC;MAC5C,OAAO;IACT;IAEAE,+BAAA,WAAAA,gCAAgCC,MAAA,EAAiC;MAC/D,MAAM,IAAIC,KAAA,CAAM9B,YAAA,CAAaF,QAAA,CAASP,iCAAA,EAAmCsC,MAAM,CAAC;IAClF;IAEAE,4BAAA,WAAAA,6BAA6BF,MAAA,EAAiC;MAC5D,MAAM,IAAIC,KAAA,CAAM9B,YAAA,CAAaF,QAAA,CAAST,8BAAA,EAAgCwC,MAAM,CAAC;IAC/E;IAEAG,oBAAA,WAAAA,qBAAqBH,MAAA,EAAiC;MACpD,MAAM,IAAIC,KAAA,CAAM9B,YAAA,CAAaF,QAAA,CAASR,2BAAA,EAA6BuC,MAAM,CAAC;IAC5E;IAEAI,+BAAA,WAAAA,gCAAA,EAAyC;MACvC,MAAM,IAAIH,KAAA,CAAM9B,YAAA,CAAaF,QAAA,CAASN,iCAAiC,CAAC;IAC1E;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}