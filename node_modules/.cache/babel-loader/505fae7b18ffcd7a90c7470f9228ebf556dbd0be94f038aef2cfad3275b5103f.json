{"ast":null,"code":"var MILLISECONDS_IN_DAY = 864e5;\nfunction dateTo12HourTime(date) {\n  if (!date) {\n    return \"\";\n  }\n  return date.toLocaleString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"numeric\",\n    hour12: true\n  });\n}\nfunction differenceInCalendarDays(a, b) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    _ref$absolute = _ref.absolute,\n    absolute = _ref$absolute === void 0 ? true : _ref$absolute;\n  if (!a || !b) {\n    return 0;\n  }\n  var utcA = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  var utcB = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n  var diff = Math.floor((utcB - utcA) / MILLISECONDS_IN_DAY);\n  return absolute ? Math.abs(diff) : diff;\n}\nfunction normalizeDate(d) {\n  try {\n    return new Date(d || /* @__PURE__ */new Date());\n  } catch (e) {\n    return /* @__PURE__ */new Date();\n  }\n}\nfunction formatRelative(props) {\n  var date = props.date,\n    relativeTo = props.relativeTo;\n  if (!date || !relativeTo) {\n    return null;\n  }\n  var a = normalizeDate(date);\n  var b = normalizeDate(relativeTo);\n  var differenceInDays = differenceInCalendarDays(b, a, {\n    absolute: false\n  });\n  if (differenceInDays < -6) {\n    return {\n      relativeDateCase: \"other\",\n      date: a\n    };\n  }\n  if (differenceInDays < -1) {\n    return {\n      relativeDateCase: \"previous6Days\",\n      date: a\n    };\n  }\n  if (differenceInDays === -1) {\n    return {\n      relativeDateCase: \"lastDay\",\n      date: a\n    };\n  }\n  if (differenceInDays === 0) {\n    return {\n      relativeDateCase: \"sameDay\",\n      date: a\n    };\n  }\n  if (differenceInDays === 1) {\n    return {\n      relativeDateCase: \"nextDay\",\n      date: a\n    };\n  }\n  if (differenceInDays < 7) {\n    return {\n      relativeDateCase: \"next6Days\",\n      date: a\n    };\n  }\n  return {\n    relativeDateCase: \"other\",\n    date: a\n  };\n}\nfunction addYears(initialDate, yearsToAdd) {\n  var date = normalizeDate(initialDate);\n  date.setFullYear(date.getFullYear() + yearsToAdd);\n  return date;\n}\nexport { addYears, dateTo12HourTime, differenceInCalendarDays, formatRelative, normalizeDate };","map":{"version":3,"names":["MILLISECONDS_IN_DAY","dateTo12HourTime","date","toLocaleString","hour","minute","hour12","differenceInCalendarDays","a","b","_ref","arguments","length","undefined","_ref$absolute","absolute","utcA","Date","UTC","getFullYear","getMonth","getDate","utcB","diff","Math","floor","abs","normalizeDate","d","e","formatRelative","props","relativeTo","differenceInDays","relativeDateCase","addYears","initialDate","yearsToAdd","setFullYear"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@clerk/shared/src/utils/date.ts"],"sourcesContent":["const MILLISECONDS_IN_DAY = 86400000;\n\nexport function dateTo12HourTime(date: Date): string {\n  if (!date) {\n    return '';\n  }\n  return date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: 'numeric',\n    hour12: true,\n  });\n}\n\nexport function differenceInCalendarDays(a: Date, b: Date, { absolute = true } = {}): number {\n  if (!a || !b) {\n    return 0;\n  }\n  const utcA = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utcB = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n  const diff = Math.floor((utcB - utcA) / MILLISECONDS_IN_DAY);\n  return absolute ? Math.abs(diff) : diff;\n}\n\nexport function normalizeDate(d: Date | string | number): Date {\n  try {\n    return new Date(d || new Date());\n  } catch (e) {\n    return new Date();\n  }\n}\n\ntype DateFormatRelativeParams = {\n  date: Date | string | number;\n  relativeTo: Date | string | number;\n};\n\ntype RelativeDateCase = 'previous6Days' | 'lastDay' | 'sameDay' | 'nextDay' | 'next6Days' | 'other';\ntype RelativeDateReturn = { relativeDateCase: RelativeDateCase; date: Date } | null;\nexport function formatRelative(props: DateFormatRelativeParams): RelativeDateReturn {\n  const { date, relativeTo } = props;\n  if (!date || !relativeTo) {\n    return null;\n  }\n  const a = normalizeDate(date);\n  const b = normalizeDate(relativeTo);\n  const differenceInDays = differenceInCalendarDays(b, a, { absolute: false });\n\n  if (differenceInDays < -6) {\n    return { relativeDateCase: 'other', date: a };\n  }\n  if (differenceInDays < -1) {\n    return { relativeDateCase: 'previous6Days', date: a };\n  }\n  if (differenceInDays === -1) {\n    return { relativeDateCase: 'lastDay', date: a };\n  }\n  if (differenceInDays === 0) {\n    return { relativeDateCase: 'sameDay', date: a };\n  }\n  if (differenceInDays === 1) {\n    return { relativeDateCase: 'nextDay', date: a };\n  }\n  if (differenceInDays < 7) {\n    return { relativeDateCase: 'next6Days', date: a };\n  }\n  return { relativeDateCase: 'other', date: a };\n}\n\nexport function addYears(initialDate: Date | number | string, yearsToAdd: number): Date {\n  const date = normalizeDate(initialDate);\n  date.setFullYear(date.getFullYear() + yearsToAdd);\n  return date;\n}\n"],"mappings":"AAAA,IAAMA,mBAAA,GAAsB;AAErB,SAASC,iBAAiBC,IAAA,EAAoB;EACnD,IAAI,CAACA,IAAA,EAAM;IACT,OAAO;EACT;EACA,OAAOA,IAAA,CAAKC,cAAA,CAAe,SAAS;IAClCC,IAAA,EAAM;IACNC,MAAA,EAAQ;IACRC,MAAA,EAAQ;EACV,CAAC;AACH;AAEO,SAASC,yBAAyBC,CAAA,EAASC,CAAA,EAA2C;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAZ,CAAC;IAAAG,aAAA,GAAAJ,IAAA,CAArBK,QAAA;IAAAA,QAAA,GAAAD,aAAA,cAAW,OAAAA,aAAA;EACtE,IAAI,CAACN,CAAA,IAAK,CAACC,CAAA,EAAG;IACZ,OAAO;EACT;EACA,IAAMO,IAAA,GAAOC,IAAA,CAAKC,GAAA,CAAIV,CAAA,CAAEW,WAAA,CAAY,GAAGX,CAAA,CAAEY,QAAA,CAAS,GAAGZ,CAAA,CAAEa,OAAA,CAAQ,CAAC;EAChE,IAAMC,IAAA,GAAOL,IAAA,CAAKC,GAAA,CAAIT,CAAA,CAAEU,WAAA,CAAY,GAAGV,CAAA,CAAEW,QAAA,CAAS,GAAGX,CAAA,CAAEY,OAAA,CAAQ,CAAC;EAChE,IAAME,IAAA,GAAOC,IAAA,CAAKC,KAAA,EAAOH,IAAA,GAAON,IAAA,IAAQhB,mBAAmB;EAC3D,OAAOe,QAAA,GAAWS,IAAA,CAAKE,GAAA,CAAIH,IAAI,IAAIA,IAAA;AACrC;AAEO,SAASI,cAAcC,CAAA,EAAiC;EAC7D,IAAI;IACF,OAAO,IAAIX,IAAA,CAAKW,CAAA,IAAK,mBAAIX,IAAA,CAAK,CAAC;EACjC,SAASY,CAAA,EAAP;IACA,OAAO,mBAAIZ,IAAA,CAAK;EAClB;AACF;AASO,SAASa,eAAeC,KAAA,EAAqD;EAClF,IAAQ7B,IAAA,GAAqB6B,KAAA,CAArB7B,IAAA;IAAM8B,UAAA,GAAeD,KAAA,CAAfC,UAAA;EACd,IAAI,CAAC9B,IAAA,IAAQ,CAAC8B,UAAA,EAAY;IACxB,OAAO;EACT;EACA,IAAMxB,CAAA,GAAImB,aAAA,CAAczB,IAAI;EAC5B,IAAMO,CAAA,GAAIkB,aAAA,CAAcK,UAAU;EAClC,IAAMC,gBAAA,GAAmB1B,wBAAA,CAAyBE,CAAA,EAAGD,CAAA,EAAG;IAAEO,QAAA,EAAU;EAAM,CAAC;EAE3E,IAAIkB,gBAAA,GAAmB,IAAI;IACzB,OAAO;MAAEC,gBAAA,EAAkB;MAAShC,IAAA,EAAMM;IAAE;EAC9C;EACA,IAAIyB,gBAAA,GAAmB,IAAI;IACzB,OAAO;MAAEC,gBAAA,EAAkB;MAAiBhC,IAAA,EAAMM;IAAE;EACtD;EACA,IAAIyB,gBAAA,KAAqB,IAAI;IAC3B,OAAO;MAAEC,gBAAA,EAAkB;MAAWhC,IAAA,EAAMM;IAAE;EAChD;EACA,IAAIyB,gBAAA,KAAqB,GAAG;IAC1B,OAAO;MAAEC,gBAAA,EAAkB;MAAWhC,IAAA,EAAMM;IAAE;EAChD;EACA,IAAIyB,gBAAA,KAAqB,GAAG;IAC1B,OAAO;MAAEC,gBAAA,EAAkB;MAAWhC,IAAA,EAAMM;IAAE;EAChD;EACA,IAAIyB,gBAAA,GAAmB,GAAG;IACxB,OAAO;MAAEC,gBAAA,EAAkB;MAAahC,IAAA,EAAMM;IAAE;EAClD;EACA,OAAO;IAAE0B,gBAAA,EAAkB;IAAShC,IAAA,EAAMM;EAAE;AAC9C;AAEO,SAAS2B,SAASC,WAAA,EAAqCC,UAAA,EAA0B;EACtF,IAAMnC,IAAA,GAAOyB,aAAA,CAAcS,WAAW;EACtClC,IAAA,CAAKoC,WAAA,CAAYpC,IAAA,CAAKiB,WAAA,CAAY,IAAIkB,UAAU;EAChD,OAAOnC,IAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}