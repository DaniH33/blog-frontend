{"ast":null,"code":"import globToRegexp from \"glob-to-regexp\";\nvar globs = {\n  toRegexp: function toRegexp(pattern) {\n    try {\n      return globToRegexp(pattern);\n    } catch (e) {\n      throw new Error(\"Invalid pattern: \".concat(pattern, \".\\nConsult the documentation of glob-to-regexp here: https://www.npmjs.com/package/glob-to-regexp.\\n\").concat(e.message));\n    }\n  }\n};\nexport { globs };","map":{"version":3,"names":["globToRegexp","globs","toRegexp","pattern","e","Error","concat","message"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@clerk/shared/src/utils/globs.ts"],"sourcesContent":["import globToRegexp from 'glob-to-regexp';\n\nexport const globs = {\n  toRegexp: (pattern: string) => {\n    try {\n      return globToRegexp(pattern) as RegExp;\n    } catch (e: any) {\n      throw new Error(\n        `Invalid pattern: ${pattern}.\\nConsult the documentation of glob-to-regexp here: https://www.npmjs.com/package/glob-to-regexp.\\n${e.message}`,\n      );\n    }\n  },\n};\n"],"mappings":"AAAA,OAAOA,YAAA,MAAkB;AAElB,IAAMC,KAAA,GAAQ;EACnBC,QAAA,EAAU,SAAAA,SAACC,OAAA,EAAoB;IAC7B,IAAI;MACF,OAAOH,YAAA,CAAaG,OAAO;IAC7B,SAASC,CAAA,EAAP;MACA,MAAM,IAAIC,KAAA,qBAAAC,MAAA,CACYH,OAAA,0GAAAG,MAAA,CAA8GF,CAAA,CAAEG,OAAA,CACtI;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}