{"ast":null,"code":"function readJSONFile(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      var result = JSON.parse(reader.result);\n      resolve(result);\n    });\n    reader.addEventListener(\"error\", reject);\n    reader.readAsText(file);\n  });\n}\nexport { readJSONFile };","map":{"version":3,"names":["readJSONFile","file","Promise","resolve","reject","reader","FileReader","addEventListener","result","JSON","parse","readAsText"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@clerk/shared/src/utils/file.ts"],"sourcesContent":["/**\n * Read an expected JSON type File.\n *\n * Probably paired with:\n *  <input type='file' accept='application/JSON' ... />\n */\nexport function readJSONFile(file: File): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', function () {\n      const result = JSON.parse(reader.result as string);\n      resolve(result);\n    });\n\n    reader.addEventListener('error', reject);\n    reader.readAsText(file);\n  });\n}\n"],"mappings":"AAMO,SAASA,aAAaC,IAAA,EAA8B;EACzD,OAAO,IAAIC,OAAA,CAAQ,UAACC,OAAA,EAASC,MAAA,EAAW;IACtC,IAAMC,MAAA,GAAS,IAAIC,UAAA,CAAW;IAC9BD,MAAA,CAAOE,gBAAA,CAAiB,QAAQ,YAAY;MAC1C,IAAMC,MAAA,GAASC,IAAA,CAAKC,KAAA,CAAML,MAAA,CAAOG,MAAgB;MACjDL,OAAA,CAAQK,MAAM;IAChB,CAAC;IAEDH,MAAA,CAAOE,gBAAA,CAAiB,SAASH,MAAM;IACvCC,MAAA,CAAOM,UAAA,CAAWV,IAAI;EACxB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}