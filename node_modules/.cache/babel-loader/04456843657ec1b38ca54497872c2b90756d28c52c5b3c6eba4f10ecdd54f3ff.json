{"ast":null,"code":"import _createClass from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nfunction isKnownError(error) {\n  return isClerkAPIResponseError(error) || isMetamaskError(error);\n}\nfunction isClerkAPIResponseError(err) {\n  return \"clerkError\" in err;\n}\nfunction isMetamaskError(err) {\n  return \"code\" in err && [4001, 32602, 32603].includes(err.code) && \"message\" in err;\n}\nfunction parseErrors() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return data.length > 0 ? data.map(parseError) : [];\n}\nfunction parseError(error) {\n  var _error$meta, _error$meta2, _error$meta3, _error$meta4;\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: error === null || error === void 0 || (_error$meta = error.meta) === null || _error$meta === void 0 ? void 0 : _error$meta.param_name,\n      sessionId: error === null || error === void 0 || (_error$meta2 = error.meta) === null || _error$meta2 === void 0 ? void 0 : _error$meta2.session_id,\n      emailAddresses: error === null || error === void 0 || (_error$meta3 = error.meta) === null || _error$meta3 === void 0 ? void 0 : _error$meta3.email_addresses,\n      zxcvbn: error === null || error === void 0 || (_error$meta4 = error.meta) === null || _error$meta4 === void 0 ? void 0 : _error$meta4.zxcvbn\n    }\n  };\n}\nvar ClerkAPIResponseError = /*#__PURE__*/function (_Error) {\n  _inherits(ClerkAPIResponseError, _Error);\n  var _super = _createSuper(ClerkAPIResponseError);\n  function ClerkAPIResponseError(message, _ref) {\n    var _this;\n    var data = _ref.data,\n      status = _ref.status;\n    _classCallCheck(this, ClerkAPIResponseError);\n    _this = _super.call(this, message);\n    _this.toString = function () {\n      return \"[\".concat(_this.name, \"]\\nMessage:\").concat(_this.message, \"\\nStatus:\").concat(_this.status, \"\\nSerialized errors: \").concat(_this.errors.map(function (e) {\n        return JSON.stringify(e);\n      }));\n    };\n    Object.setPrototypeOf(_assertThisInitialized(_this), ClerkAPIResponseError.prototype);\n    _this.status = status;\n    _this.message = message;\n    _this.clerkError = true;\n    _this.errors = parseErrors(data);\n    return _this;\n  }\n  return _createClass(ClerkAPIResponseError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar MagicLinkError = /*#__PURE__*/function (_Error2) {\n  _inherits(MagicLinkError, _Error2);\n  var _super2 = _createSuper(MagicLinkError);\n  function MagicLinkError(code) {\n    var _this2;\n    _classCallCheck(this, MagicLinkError);\n    _this2 = _super2.call(this, code);\n    _this2.code = code;\n    Object.setPrototypeOf(_assertThisInitialized(_this2), MagicLinkError.prototype);\n    return _this2;\n  }\n  return _createClass(MagicLinkError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nfunction isMagicLinkError(err) {\n  return err instanceof MagicLinkError;\n}\nvar MagicLinkErrorCode = {\n  Expired: \"expired\",\n  Failed: \"failed\"\n};\nexport { ClerkAPIResponseError, MagicLinkError, MagicLinkErrorCode, isClerkAPIResponseError, isKnownError, isMagicLinkError, isMetamaskError, parseError, parseErrors };","map":{"version":3,"names":["isKnownError","error","isClerkAPIResponseError","isMetamaskError","err","includes","code","parseErrors","data","arguments","length","undefined","map","parseError","_error$meta","_error$meta2","_error$meta3","_error$meta4","message","longMessage","long_message","meta","paramName","param_name","sessionId","session_id","emailAddresses","email_addresses","zxcvbn","ClerkAPIResponseError","_Error","_inherits","_super","_createSuper","_ref","_this","status","_classCallCheck","call","toString","concat","name","errors","e","JSON","stringify","Object","setPrototypeOf","_assertThisInitialized","prototype","clerkError","_createClass","_wrapNativeSuper","Error","MagicLinkError","_Error2","_super2","_this2","isMagicLinkError","MagicLinkErrorCode","Expired","Failed"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@clerk/shared/src/errors/Error.ts"],"sourcesContent":["import type { ClerkAPIError, ClerkAPIErrorJSON } from '@clerk/types';\n\ninterface ClerkAPIResponseOptions {\n  data: ClerkAPIErrorJSON[];\n  status: number;\n}\n\n// For a comprehensive Metamask error list, please see\n// https://docs.metamask.io/guide/ethereum-provider.html#errors\nexport interface MetamaskError extends Error {\n  code: 4001 | 32602 | 32603;\n  message: string;\n  data?: unknown;\n}\n\nexport function isKnownError(error: any) {\n  return isClerkAPIResponseError(error) || isMetamaskError(error);\n}\n\nexport function isClerkAPIResponseError(err: any): err is ClerkAPIResponseError {\n  return 'clerkError' in err;\n}\n\nexport function isMetamaskError(err: any): err is MetamaskError {\n  return 'code' in err && [4001, 32602, 32603].includes(err.code) && 'message' in err;\n}\n\nexport function parseErrors(data: ClerkAPIErrorJSON[] = []): ClerkAPIError[] {\n  return data.length > 0 ? data.map(parseError) : [];\n}\n\nexport function parseError(error: ClerkAPIErrorJSON): ClerkAPIError {\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: error?.meta?.param_name,\n      sessionId: error?.meta?.session_id,\n      emailAddresses: error?.meta?.email_addresses,\n      zxcvbn: error?.meta?.zxcvbn,\n    },\n  };\n}\n\nexport class ClerkAPIResponseError extends Error {\n  clerkError: true;\n\n  status: number;\n  message: string;\n\n  errors: ClerkAPIError[];\n\n  constructor(message: string, { data, status }: ClerkAPIResponseOptions) {\n    super(message);\n\n    Object.setPrototypeOf(this, ClerkAPIResponseError.prototype);\n\n    this.status = status;\n    this.message = message;\n    this.clerkError = true;\n    this.errors = parseErrors(data);\n  }\n\n  public toString = () => {\n    return `[${this.name}]\\nMessage:${this.message}\\nStatus:${this.status}\\nSerialized errors: ${this.errors.map(e =>\n      JSON.stringify(e),\n    )}`;\n  };\n}\n\nexport class MagicLinkError extends Error {\n  code: string;\n\n  constructor(code: string) {\n    super(code);\n    this.code = code;\n    Object.setPrototypeOf(this, MagicLinkError.prototype);\n  }\n}\n// Check if the error is a MagicLinkError.\n\nexport function isMagicLinkError(err: Error): err is MagicLinkError {\n  return err instanceof MagicLinkError;\n}\n\nexport const MagicLinkErrorCode = {\n  Expired: 'expired',\n  Failed: 'failed',\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}