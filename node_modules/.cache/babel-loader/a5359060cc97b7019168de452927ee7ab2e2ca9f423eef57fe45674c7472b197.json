{"ast":null,"code":"import _objectSpread from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"../chunk-UKSPFOP7.js\";\nimport React from \"react\";\nimport IsomorphicClerk from \"../isomorphicClerk\";\nimport { deriveState } from \"../utils/deriveState\";\nimport { AuthContext } from \"./AuthContext\";\nimport { ClientContext } from \"./ClientContext\";\nimport { IsomorphicClerkContext } from \"./IsomorphicClerkContext\";\nimport { OrganizationProvider } from \"./OrganizationContext\";\nimport { SessionContext } from \"./SessionContext\";\nimport { UserContext } from \"./UserContext\";\nfunction ClerkContextProvider(props) {\n  var isomorphicClerkOptions = props.isomorphicClerkOptions,\n    initialState = props.initialState,\n    children = props.children;\n  var _useLoadedIsomorphicC = useLoadedIsomorphicClerk(isomorphicClerkOptions),\n    clerk = _useLoadedIsomorphicC.isomorphicClerk,\n    clerkLoaded = _useLoadedIsomorphicC.loaded;\n  var _React$useState = React.useState({\n      client: clerk.client,\n      session: clerk.session,\n      user: clerk.user,\n      organization: clerk.organization,\n      lastOrganizationInvitation: null,\n      lastOrganizationMember: null\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  React.useEffect(function () {\n    return clerk.addListener(function (e) {\n      return setState(_objectSpread({}, e));\n    });\n  }, []);\n  var derivedState = deriveState(clerkLoaded, state, initialState);\n  var clerkCtx = React.useMemo(function () {\n    return {\n      value: clerk\n    };\n  }, [clerkLoaded]);\n  var clientCtx = React.useMemo(function () {\n    return {\n      value: state.client\n    };\n  }, [state.client]);\n  var sessionId = derivedState.sessionId,\n    session = derivedState.session,\n    userId = derivedState.userId,\n    user = derivedState.user,\n    orgId = derivedState.orgId,\n    actor = derivedState.actor,\n    lastOrganizationInvitation = derivedState.lastOrganizationInvitation,\n    lastOrganizationMember = derivedState.lastOrganizationMember,\n    organization = derivedState.organization,\n    orgRole = derivedState.orgRole,\n    orgSlug = derivedState.orgSlug;\n  var authCtx = React.useMemo(function () {\n    var value = {\n      sessionId: sessionId,\n      userId: userId,\n      actor: actor,\n      orgId: orgId,\n      orgRole: orgRole,\n      orgSlug: orgSlug\n    };\n    return {\n      value: value\n    };\n  }, [sessionId, userId, actor, orgId, orgRole, orgSlug]);\n  var userCtx = React.useMemo(function () {\n    return {\n      value: user\n    };\n  }, [userId, user]);\n  var sessionCtx = React.useMemo(function () {\n    return {\n      value: session\n    };\n  }, [sessionId, session]);\n  var organizationCtx = React.useMemo(function () {\n    var value = {\n      organization: organization,\n      lastOrganizationInvitation: lastOrganizationInvitation,\n      lastOrganizationMember: lastOrganizationMember\n    };\n    return {\n      value: value\n    };\n  }, [orgId, organization, lastOrganizationInvitation, lastOrganizationMember]);\n  return (\n    // @ts-expect-error\n    /* @__PURE__ */\n    React.createElement(IsomorphicClerkContext.Provider, {\n      value: clerkCtx\n    }, /* @__PURE__ */React.createElement(ClientContext.Provider, {\n      value: clientCtx\n    }, /* @__PURE__ */React.createElement(SessionContext.Provider, {\n      value: sessionCtx\n    }, /* @__PURE__ */React.createElement(OrganizationProvider, _objectSpread({}, organizationCtx.value), /* @__PURE__ */React.createElement(AuthContext.Provider, {\n      value: authCtx\n    }, /* @__PURE__ */React.createElement(UserContext.Provider, {\n      value: userCtx\n    }, children))))))\n  );\n}\nvar useLoadedIsomorphicClerk = function useLoadedIsomorphicClerk(options) {\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    loaded = _React$useState4[0],\n    setLoaded = _React$useState4[1];\n  var isomorphicClerk = React.useMemo(function () {\n    return IsomorphicClerk.getOrCreateInstance(options);\n  }, []);\n  React.useEffect(function () {\n    isomorphicClerk.__unstable__updateProps({\n      appearance: options.appearance\n    });\n  }, [options.appearance]);\n  React.useEffect(function () {\n    isomorphicClerk.__unstable__updateProps({\n      options: options\n    });\n  }, [options.localization]);\n  React.useEffect(function () {\n    isomorphicClerk.addOnLoaded(function () {\n      return setLoaded(true);\n    });\n  }, []);\n  return {\n    isomorphicClerk: isomorphicClerk,\n    loaded: loaded\n  };\n};\nexport { ClerkContextProvider };","map":{"version":3,"names":["React","IsomorphicClerk","deriveState","AuthContext","ClientContext","IsomorphicClerkContext","OrganizationProvider","SessionContext","UserContext","ClerkContextProvider","props","isomorphicClerkOptions","initialState","children","_useLoadedIsomorphicC","useLoadedIsomorphicClerk","clerk","isomorphicClerk","clerkLoaded","loaded","_React$useState","useState","client","session","user","organization","lastOrganizationInvitation","lastOrganizationMember","_React$useState2","_slicedToArray","state","setState","useEffect","addListener","e","_objectSpread","derivedState","clerkCtx","useMemo","value","clientCtx","sessionId","userId","orgId","actor","orgRole","orgSlug","authCtx","userCtx","sessionCtx","organizationCtx","createElement","Provider","options","_React$useState3","_React$useState4","setLoaded","getOrCreateInstance","__unstable__updateProps","appearance","localization","addOnLoaded"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@clerk/clerk-react/src/contexts/ClerkContextProvider.tsx"],"sourcesContent":["import type { ClientResource, InitialState, Resources } from '@clerk/types';\nimport React from 'react';\n\nimport IsomorphicClerk from '../isomorphicClerk';\nimport type { IsomorphicClerkOptions } from '../types';\nimport { deriveState } from '../utils/deriveState';\nimport { AuthContext } from './AuthContext';\nimport { ClientContext } from './ClientContext';\nimport { IsomorphicClerkContext } from './IsomorphicClerkContext';\nimport { OrganizationProvider } from './OrganizationContext';\nimport { SessionContext } from './SessionContext';\nimport { UserContext } from './UserContext';\n\ntype ClerkContextProvider = {\n  isomorphicClerkOptions: IsomorphicClerkOptions;\n  initialState: InitialState | undefined;\n  children: React.ReactNode;\n};\n\nexport type ClerkContextProviderState = Resources;\n\nexport function ClerkContextProvider(props: ClerkContextProvider): JSX.Element | null {\n  const { isomorphicClerkOptions, initialState, children } = props;\n  const { isomorphicClerk: clerk, loaded: clerkLoaded } = useLoadedIsomorphicClerk(isomorphicClerkOptions);\n\n  const [state, setState] = React.useState<ClerkContextProviderState>({\n    client: clerk.client as ClientResource,\n    session: clerk.session,\n    user: clerk.user,\n    organization: clerk.organization,\n    lastOrganizationInvitation: null,\n    lastOrganizationMember: null,\n  });\n\n  React.useEffect(() => {\n    return clerk.addListener(e => setState({ ...e }));\n  }, []);\n\n  const derivedState = deriveState(clerkLoaded, state, initialState);\n  const clerkCtx = React.useMemo(() => ({ value: clerk }), [clerkLoaded]);\n  const clientCtx = React.useMemo(() => ({ value: state.client }), [state.client]);\n\n  const {\n    sessionId,\n    session,\n    userId,\n    user,\n    orgId,\n    actor,\n    lastOrganizationInvitation,\n    lastOrganizationMember,\n    organization,\n    orgRole,\n    orgSlug,\n  } = derivedState;\n\n  const authCtx = React.useMemo(() => {\n    const value = { sessionId, userId, actor, orgId, orgRole, orgSlug };\n    return { value };\n  }, [sessionId, userId, actor, orgId, orgRole, orgSlug]);\n  const userCtx = React.useMemo(() => ({ value: user }), [userId, user]);\n  const sessionCtx = React.useMemo(() => ({ value: session }), [sessionId, session]);\n  const organizationCtx = React.useMemo(() => {\n    const value = {\n      organization: organization,\n      lastOrganizationInvitation: lastOrganizationInvitation,\n      lastOrganizationMember: lastOrganizationMember,\n    };\n    return { value };\n  }, [orgId, organization, lastOrganizationInvitation, lastOrganizationMember]);\n\n  return (\n    // @ts-expect-error\n    <IsomorphicClerkContext.Provider value={clerkCtx}>\n      <ClientContext.Provider value={clientCtx}>\n        <SessionContext.Provider value={sessionCtx}>\n          <OrganizationProvider {...organizationCtx.value}>\n            <AuthContext.Provider value={authCtx}>\n              <UserContext.Provider value={userCtx}>{children}</UserContext.Provider>\n            </AuthContext.Provider>\n          </OrganizationProvider>\n        </SessionContext.Provider>\n      </ClientContext.Provider>\n    </IsomorphicClerkContext.Provider>\n  );\n}\n\nconst useLoadedIsomorphicClerk = (options: IsomorphicClerkOptions) => {\n  const [loaded, setLoaded] = React.useState(false);\n  const isomorphicClerk = React.useMemo(() => IsomorphicClerk.getOrCreateInstance(options), []);\n\n  React.useEffect(() => {\n    isomorphicClerk.__unstable__updateProps({ appearance: options.appearance });\n  }, [options.appearance]);\n\n  React.useEffect(() => {\n    isomorphicClerk.__unstable__updateProps({ options });\n  }, [options.localization]);\n\n  React.useEffect(() => {\n    isomorphicClerk.addOnLoaded(() => setLoaded(true));\n  }, []);\n\n  return { isomorphicClerk, loaded };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}