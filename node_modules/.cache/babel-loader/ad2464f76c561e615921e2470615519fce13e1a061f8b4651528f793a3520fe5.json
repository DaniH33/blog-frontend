{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import Post from\"./Post\";import{Link}from\"react-router-dom\";import APIURL from\"./APIURL\";import{useUser,SignOutButton}from\"@clerk/clerk-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _user$publicMetadata;//20 Set up state to show our posts when the API call data comes in\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useUser=useUser(),user=_useUser.user;//21 When the page first loads\nuseEffect(function(){var makeAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(APIURL,\"/posts\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;//26 Use the data to set that into state\nsetPosts(data.posts);console.log(data.posts);case 8:case\"end\":return _context.stop();}},_callee);}));return function makeAPICall(){return _ref.apply(this,arguments);};}();makeAPICall();},[]);var searchPosts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:event.preventDefault();_context2.next=3;return fetch(\"\".concat(APIURL,\"/postsSearch\"),{headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({query:event.target.elements.searchInput.value}),method:\"POST\"});case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;//26 Use the data to set that into state\nsetPosts(data.posts);// console.log(data.posts);\ncase 8:case\"end\":return _context2.stop();}},_callee2);}));return function searchPosts(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:searchPosts,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"searchInput\",className:\"form-control\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"form-control\",children:\"Search\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"posts\",className:\"row\",children:!posts?/*#__PURE__*/_jsx(\"p\",{children:\"No posts yet...\"}):// 27 Loop over each of the posts\nposts.map(function(eachPost){// 28 Make the Post component show for each post from the DB\n//and pass the post info in a prop called data\nreturn/*#__PURE__*/_jsx(Post,{data:eachPost},eachPost.id);})}),/*#__PURE__*/_jsxs(\"div\",{id:\"actionLinks\",children:[!user&&/*#__PURE__*/_jsx(Link,{to:\"/sign-in\",children:\"Sign In\"}),user&&(user===null||user===void 0?void 0:(_user$publicMetadata=user.publicMetadata)===null||_user$publicMetadata===void 0?void 0:_user$publicMetadata.admin)&&/*#__PURE__*/_jsx(Link,{to:\"/newPost\",children:\"New Post\"}),user&&/*#__PURE__*/_jsx(SignOutButton,{})]})]});};export default Home;","map":{"version":3,"names":["useState","useEffect","Post","Link","APIURL","useUser","SignOutButton","jsx","_jsx","jsxs","_jsxs","Home","_user$publicMetadata","_useState","_useState2","_slicedToArray","posts","setPosts","_useUser","user","makeAPICall","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","console","log","stop","apply","arguments","searchPosts","_ref2","_callee2","event","_callee2$","_context2","preventDefault","headers","body","JSON","stringify","query","target","elements","searchInput","value","method","_x","children","onSubmit","type","id","className","map","eachPost","to","publicMetadata","admin"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/src/Home.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport { Link } from \"react-router-dom\";\nimport APIURL from \"./APIURL\";\nimport { useUser, SignOutButton } from \"@clerk/clerk-react\";\n\nconst Home = () => {\n\t//20 Set up state to show our posts when the API call data comes in\n\tconst [posts, setPosts] = useState([]);\n\tconst { user } = useUser();\n\n\t//21 When the page first loads\n\tuseEffect(() => {\n\t\tconst makeAPICall = async () => {\n\t\t\t//22 Fetch our posts from the backend /posts endpoint\n\t\t\tconst response = await fetch(`${APIURL}/posts`);\n\t\t\t//25 Parse the data\n\t\t\tconst data = await response.json();\n\t\t\t//26 Use the data to set that into state\n\t\t\tsetPosts(data.posts);\n\t\t\tconsole.log(data.posts);\n\t\t};\n\t\tmakeAPICall();\n\t}, []);\n\n\tconst searchPosts = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst response = await fetch(`${APIURL}/postsSearch`, {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: event.target.elements.searchInput.value,\n\t\t\t}),\n\t\t\tmethod: \"POST\",\n\t\t});\n\t\t//25 Parse the data\n\t\tconst data = await response.json();\n\t\t//26 Use the data to set that into state\n\t\tsetPosts(data.posts);\n\t\t// console.log(data.posts);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* Remove container div & h1 */}\n\n\t\t\t<form onSubmit={searchPosts}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"searchInput\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t></input>\n\t\t\t\t<button type=\"submit\" className=\"form-control\">\n\t\t\t\t\tSearch\n\t\t\t\t</button>\n\t\t\t</form>\n\n\t\t\t<div id=\"posts\" className=\"row\">\n\t\t\t\t{!posts ? (\n\t\t\t\t\t<p>No posts yet...</p>\n\t\t\t\t) : (\n\t\t\t\t\t// 27 Loop over each of the posts\n\t\t\t\t\tposts.map((eachPost) => {\n\t\t\t\t\t\t// 28 Make the Post component show for each post from the DB\n\t\t\t\t\t\t//and pass the post info in a prop called data\n\t\t\t\t\t\treturn <Post key={eachPost.id} data={eachPost} />;\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{/* <!-- end of posts row--> */}\n\t\t\t<div id=\"actionLinks\">\n\t\t\t\t{!user && <Link to=\"/sign-in\">Sign In</Link>}\n\t\t\t\t{user && user?.publicMetadata?.admin && (\n\t\t\t\t\t<Link to=\"/newPost\">New Post</Link>\n\t\t\t\t)}\n\t\t\t\t{user && <SignOutButton />}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}