{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"../chunk-UKSPFOP7.js\";\nimport { addClerkPrefix, isValidProxyUrl, loadScript, parsePublishableKey, proxyUrlToAbsoluteURL } from \"@clerk/shared\";\nimport { errorThrower } from \"./errorThrower\";\nimport { isDevOrStagingUrl } from \"./isDevOrStageUrl\";\nvar FAILED_TO_LOAD_ERROR = \"Clerk: Failed to load Clerk\";\nvar loadClerkJsScript = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(opts) {\n    var frontendApi, publishableKey;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          frontendApi = opts.frontendApi, publishableKey = opts.publishableKey;\n          if (!publishableKey && !frontendApi) {\n            errorThrower.throwMissingPublishableKeyError();\n          }\n          return _context.abrupt(\"return\", loadScript(clerkJsScriptUrl(opts), {\n            async: true,\n            crossOrigin: \"anonymous\",\n            beforeLoad: applyClerkJsScriptAttributes(opts)\n          }).catch(function () {\n            throw new Error(FAILED_TO_LOAD_ERROR);\n          }));\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function loadClerkJsScript(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar clerkJsScriptUrl = function clerkJsScriptUrl(opts) {\n  var _parsePublishableKey;\n  var clerkJSUrl = opts.clerkJSUrl,\n    clerkJSVariant = opts.clerkJSVariant,\n    clerkJSVersion = opts.clerkJSVersion,\n    proxyUrl = opts.proxyUrl,\n    domain = opts.domain,\n    publishableKey = opts.publishableKey,\n    frontendApi = opts.frontendApi;\n  if (clerkJSUrl) {\n    return clerkJSUrl;\n  }\n  var scriptHost = \"\";\n  if (!!proxyUrl && isValidProxyUrl(proxyUrl)) {\n    scriptHost = proxyUrlToAbsoluteURL(proxyUrl).replace(/http(s)?:\\/\\//, \"\");\n  } else if (domain && !isDevOrStagingUrl(((_parsePublishableKey = parsePublishableKey(publishableKey)) === null || _parsePublishableKey === void 0 ? void 0 : _parsePublishableKey.frontendApi) || frontendApi || \"\")) {\n    scriptHost = addClerkPrefix(domain);\n  } else {\n    var _parsePublishableKey2;\n    scriptHost = ((_parsePublishableKey2 = parsePublishableKey(publishableKey)) === null || _parsePublishableKey2 === void 0 ? void 0 : _parsePublishableKey2.frontendApi) || frontendApi || \"\";\n  }\n  var variant = clerkJSVariant ? \"\".concat(clerkJSVariant.replace(/\\.+$/, \"\"), \".\") : \"\";\n  var version = clerkJSVersion || getPrereleaseTag(\"4.24.0\") || getMajorVersion(\"4.24.0\");\n  return \"https://\".concat(scriptHost, \"/npm/@clerk/clerk-js@\").concat(version, \"/dist/clerk.\").concat(variant, \"browser.js\");\n};\nvar applyClerkJsScriptAttributes = function applyClerkJsScriptAttributes(options) {\n  return function (script) {\n    var publishableKey = options.publishableKey,\n      frontendApi = options.frontendApi,\n      proxyUrl = options.proxyUrl,\n      domain = options.domain;\n    if (publishableKey) {\n      script.setAttribute(\"data-clerk-publishable-key\", publishableKey);\n    } else if (frontendApi) {\n      script.setAttribute(\"data-clerk-frontend-api\", frontendApi);\n    }\n    if (proxyUrl) {\n      script.setAttribute(\"data-clerk-proxy-url\", proxyUrl);\n    }\n    if (domain) {\n      script.setAttribute(\"data-clerk-domain\", domain);\n    }\n  };\n};\nvar getPrereleaseTag = function getPrereleaseTag(packageVersion) {\n  var _packageVersion$match;\n  return (_packageVersion$match = packageVersion.match(/-(.*)\\./)) === null || _packageVersion$match === void 0 ? void 0 : _packageVersion$match[1];\n};\nvar getMajorVersion = function getMajorVersion(packageVersion) {\n  return packageVersion.split(\".\")[0];\n};\nexport { loadClerkJsScript };","map":{"version":3,"names":["addClerkPrefix","isValidProxyUrl","loadScript","parsePublishableKey","proxyUrlToAbsoluteURL","errorThrower","isDevOrStagingUrl","FAILED_TO_LOAD_ERROR","loadClerkJsScript","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opts","frontendApi","publishableKey","wrap","_callee$","_context","prev","next","throwMissingPublishableKeyError","abrupt","clerkJsScriptUrl","async","crossOrigin","beforeLoad","applyClerkJsScriptAttributes","catch","Error","stop","_x","apply","arguments","_parsePublishableKey","clerkJSUrl","clerkJSVariant","clerkJSVersion","proxyUrl","domain","scriptHost","replace","_parsePublishableKey2","variant","concat","version","getPrereleaseTag","getMajorVersion","options","script","setAttribute","packageVersion","_packageVersion$match","match","split"],"sources":["/Users/hacktheplanet/Documents/GitHub/blog-frontend/node_modules/@clerk/clerk-react/src/utils/loadClerkJsScript.ts"],"sourcesContent":["import { addClerkPrefix, isValidProxyUrl, loadScript, parsePublishableKey, proxyUrlToAbsoluteURL } from '@clerk/shared';\n\nimport type { IsomorphicClerkOptions } from '../types';\nimport { errorThrower } from './errorThrower';\nimport { isDevOrStagingUrl } from './isDevOrStageUrl';\n\nconst FAILED_TO_LOAD_ERROR = 'Clerk: Failed to load Clerk';\n\ntype LoadClerkJsScriptOptions = Omit<IsomorphicClerkOptions, 'proxyUrl' | 'domain'> & {\n  proxyUrl: string;\n  domain: string;\n};\n\nexport const loadClerkJsScript = async (opts: LoadClerkJsScriptOptions) => {\n  const { frontendApi, publishableKey } = opts;\n\n  if (!publishableKey && !frontendApi) {\n    errorThrower.throwMissingPublishableKeyError();\n  }\n\n  return loadScript(clerkJsScriptUrl(opts), {\n    async: true,\n    crossOrigin: 'anonymous',\n    beforeLoad: applyClerkJsScriptAttributes(opts),\n  }).catch(() => {\n    throw new Error(FAILED_TO_LOAD_ERROR);\n  });\n};\n\nconst clerkJsScriptUrl = (opts: LoadClerkJsScriptOptions) => {\n  const { clerkJSUrl, clerkJSVariant, clerkJSVersion, proxyUrl, domain, publishableKey, frontendApi } = opts;\n\n  if (clerkJSUrl) {\n    return clerkJSUrl;\n  }\n\n  let scriptHost = '';\n  if (!!proxyUrl && isValidProxyUrl(proxyUrl)) {\n    scriptHost = proxyUrlToAbsoluteURL(proxyUrl).replace(/http(s)?:\\/\\//, '');\n  } else if (domain && !isDevOrStagingUrl(parsePublishableKey(publishableKey)?.frontendApi || frontendApi || '')) {\n    scriptHost = addClerkPrefix(domain);\n  } else {\n    scriptHost = parsePublishableKey(publishableKey)?.frontendApi || frontendApi || '';\n  }\n\n  const variant = clerkJSVariant ? `${clerkJSVariant.replace(/\\.+$/, '')}.` : '';\n  const version = clerkJSVersion || getPrereleaseTag(PACKAGE_VERSION) || getMajorVersion(PACKAGE_VERSION);\n  return `https://${scriptHost}/npm/@clerk/clerk-js@${version}/dist/clerk.${variant}browser.js`;\n};\n\nconst applyClerkJsScriptAttributes = (options: LoadClerkJsScriptOptions) => (script: HTMLScriptElement) => {\n  const { publishableKey, frontendApi, proxyUrl, domain } = options;\n  if (publishableKey) {\n    script.setAttribute('data-clerk-publishable-key', publishableKey);\n  } else if (frontendApi) {\n    script.setAttribute('data-clerk-frontend-api', frontendApi);\n  }\n\n  if (proxyUrl) {\n    script.setAttribute('data-clerk-proxy-url', proxyUrl);\n  }\n\n  if (domain) {\n    script.setAttribute('data-clerk-domain', domain);\n  }\n};\n\nconst getPrereleaseTag = (packageVersion: string) => packageVersion.match(/-(.*)\\./)?.[1];\n\nconst getMajorVersion = (packageVersion: string) => packageVersion.split('.')[0];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}